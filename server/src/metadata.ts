/* eslint-disable */
export default async () => {
    const t = {
        ["./common/constants/common.enum"]: await import("./common/constants/common.enum"),
        ["./common/dto/UserResponse.dto"]: await import("./common/dto/UserResponse.dto"),
        ["./common/dto/ConversationParticipantResponse.dto"]: await import("./common/dto/ConversationParticipantResponse.dto"),
        ["./common/dto/MessageEmotionResponse.dto"]: await import("./common/dto/MessageEmotionResponse.dto"),
        ["./common/dto/MessageMediaResponse.dto"]: await import("./common/dto/MessageMediaResponse.dto"),
        ["./common/dto/ConversationMessageResponse.dto"]: await import("./common/dto/ConversationMessageResponse.dto"),
        ["./modules/apis/chat/dto/get-conversation-messages/GetConversationMessageResponse.dto"]: await import("./modules/apis/chat/dto/get-conversation-messages/GetConversationMessageResponse.dto"),
        ["./modules/apis/chat/dto/get-conversation-details/GetConversationDetailsResponse.dto"]: await import("./modules/apis/chat/dto/get-conversation-details/GetConversationDetailsResponse.dto"),
        ["nestjs-form-data/dist/classes/storage/MemoryStoredFile"]: await import("nestjs-form-data/dist/classes/storage/MemoryStoredFile"),
        ["./modules/apis/auth/dto/signup/SignupResponse.dto"]: await import("./modules/apis/auth/dto/signup/SignupResponse.dto"),
        ["./modules/apis/auth/dto/login/LoginResponse.dto"]: await import("./modules/apis/auth/dto/login/LoginResponse.dto"),
        ["./common/dto/MessageResponse.dto"]: await import("./common/dto/MessageResponse.dto"),
        ["./modules/apis/auth/dto/reset-password/ResetPasswordResponse.dto"]: await import("./modules/apis/auth/dto/reset-password/ResetPasswordResponse.dto"),
        ["./modules/apis/auth/dto/refresh-token/RefreshTokenResponse.dto"]: await import("./modules/apis/auth/dto/refresh-token/RefreshTokenResponse.dto"),
        ["./modules/apis/auth/dto/init-oauth-password/InitOAuthPasswordResponse.dto"]: await import("./modules/apis/auth/dto/init-oauth-password/InitOAuthPasswordResponse.dto"),
        ["./modules/apis/chat/dto/create-private-chat/CreatedPrivateChatResponse.dto"]: await import("./modules/apis/chat/dto/create-private-chat/CreatedPrivateChatResponse.dto"),
        ["./modules/apis/user/dto/update-profile/UpdateProfileResponse.dto"]: await import("./modules/apis/user/dto/update-profile/UpdateProfileResponse.dto"),
        ["./modules/apis/user/dto/2fa/GenerateTwoFAResponse.dto"]: await import("./modules/apis/user/dto/2fa/GenerateTwoFAResponse.dto"),
        ["./modules/apis/user/dto/2fa/ModifyTwoFAResponse.dto"]: await import("./modules/apis/user/dto/2fa/ModifyTwoFAResponse.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./common/dto/BaseExceptionResponse.dto"), { "BaseExceptionResponse": { statusCode: { required: true, type: () => Number }, message: { required: true, type: () => String }, errors: { required: true, type: () => Object, nullable: true }, path: { required: true, type: () => String } } }], [import("./common/dto/PaginationResponse.dto"), { "PaginationResponseDTO": { currentPage: { required: true, type: () => Number }, totalPage: { required: true, type: () => Number }, pageSize: { required: true, type: () => Number }, hasNextPage: { required: true, type: () => Boolean }, data: { required: true } } }], [import("./common/dto/MessageResponse.dto"), { "MessageResponseDTO": { message: { required: true, type: () => String } } }], [import("./modules/apis/auth/dto/login/LoginBody.dto"), { "LoginBodyDTO": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String } } }], [import("./modules/apis/auth/dto/login/LoginExceptionResponse.dto"), { "LoginExceptionResponseDTO": { errorType: { required: true, enum: t["./common/constants/common.enum"].ELoginExceptionErrorType } } }], [import("./common/dto/UserResponse.dto"), { "UserResponseDTO": { id: { required: true, type: () => String }, fullName: { required: true, type: () => String }, email: { required: true, type: () => String }, avatar: { required: true, type: () => String }, isEnableTwoFactorAuth: { required: true, type: () => Boolean } } }], [import("./modules/apis/auth/dto/login/LoginResponse.dto"), { "LoginResponseDTO": { user: { required: true, type: () => t["./common/dto/UserResponse.dto"].UserResponseDTO } } }], [import("./modules/apis/auth/dto/refresh-token/RefreshTokenResponse.dto"), { "RefreshTokenResponseDTO": {} }], [import("./modules/apis/auth/dto/reset-password/ResetPasswordBody.dto"), { "ResetPasswordBodyDto": { newPassword: { required: true, type: () => String, minLength: 8, maxLength: 20 } } }], [import("./modules/apis/auth/dto/reset-password/ResetPasswordHeaders.dto"), { "ResetPasswordHeadersDTO": { token: { required: true, type: () => String } } }], [import("./modules/apis/auth/dto/reset-password/ResetPasswordResponse.dto"), { "ResetPasswordResponseDto": { user: { required: true, type: () => t["./common/dto/UserResponse.dto"].UserResponseDTO } } }], [import("./modules/apis/auth/dto/send-reset-password-mail/SendResetPasswordMailBody.dto"), { "SendResetPasswordMailBodyDto": { email: { required: true, type: () => String, format: "email" } } }], [import("./modules/apis/auth/dto/signup/SignupBody.dto"), { "SignupRequestDTO": { fullName: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String, minLength: 8, maxLength: 20 } } }], [import("./modules/apis/auth/dto/signup/SignupResponse.dto"), { "SignupResponseDTO": { id: { required: true, type: () => String }, fullName: { required: true, type: () => String }, email: { required: true, type: () => String }, avatar: { required: true, type: () => String } } }], [import("./modules/apis/auth/dto/verify-two-factor/VerifyTwoFactorBody.dto"), { "VerifyTwoFactorAuthBodyDTO": { otpCode: { required: true, type: () => String, minLength: 6, maxLength: 6 } } }], [import("./common/dto/ConversationParticipantResponse.dto"), { "ConversationParticipantProfileDTO": { id: { required: true, type: () => String }, fullName: { required: true, type: () => String }, avatar: { required: true, type: () => String } }, "ConversationParticipantResponseDTO": { id: { required: true, type: () => String }, profile: { required: true, type: () => t["./common/dto/ConversationParticipantResponse.dto"].ConversationParticipantProfileDTO }, role: { required: true, type: () => Object } } }], [import("./common/dto/MessageEmotionResponse.dto"), { "MessageEmotionResponseDTO": { id: { required: true, type: () => String }, emojiCode: { required: true, type: () => String }, participant: { required: true, type: () => t["./common/dto/ConversationParticipantResponse.dto"].ConversationParticipantResponseDTO }, createdAt: { required: true, type: () => Date } } }], [import("./common/dto/MessageMediaResponse.dto"), { "MessageMediaResponseDTO": { id: { required: true, type: () => String }, url: { required: true, type: () => String }, type: { required: true, type: () => Object }, fileName: { required: true, type: () => String, nullable: true } } }], [import("./common/dto/ConversationMessageResponse.dto"), { "MessageReactionsDataDTO": { total: { required: true, type: () => Number }, topReactions: { required: true, type: () => [String] }, data: { required: true, type: () => [t["./common/dto/MessageEmotionResponse.dto"].MessageEmotionResponseDTO] } }, "ConversationMessageResponseDTO": { id: { required: true, type: () => String }, type: { required: true, type: () => Object }, systemAction: { required: true, type: () => Object, nullable: true }, content: { required: true, type: () => String, nullable: true }, callStatus: { required: true, type: () => Object, nullable: true }, callDuration: { required: true, type: () => Number, nullable: true }, createdAt: { required: true, type: () => Date }, isRevokedForEveryone: { required: true, type: () => Boolean }, mediaList: { required: true, type: () => [t["./common/dto/MessageMediaResponse.dto"].MessageMediaResponseDTO] }, reactionsData: { required: true, type: () => t["./common/dto/ConversationMessageResponse.dto"].MessageReactionsDataDTO }, sender: { required: true, type: () => t["./common/dto/ConversationParticipantResponse.dto"].ConversationParticipantResponseDTO, nullable: true } } }], [import("./modules/apis/chat/dto/get-conversation-messages/GetConversationMessageResponse.dto"), { "ParticipantSeenMessageResponseDTO": { seenAt: { required: true, type: () => Date } }, "LinkMetadata": { url: { required: true, type: () => String }, title: { required: true, type: () => String, nullable: true }, description: { required: true, type: () => String, nullable: true }, imageUrl: { required: true, type: () => String, nullable: true } }, "ActionsOnMessageDTO": { canRevoke: { required: true, type: () => Boolean }, canReply: { required: true, type: () => Boolean }, canDropEmotion: { required: true, type: () => Boolean } }, "GetConversationMessageResponseDTO": { seenBy: { required: true, type: () => [t["./modules/apis/chat/dto/get-conversation-messages/GetConversationMessageResponse.dto"].ParticipantSeenMessageResponseDTO] }, linkMetadata: { required: true, type: () => t["./modules/apis/chat/dto/get-conversation-messages/GetConversationMessageResponse.dto"].LinkMetadata, nullable: true }, actionsOnMessage: { required: true, type: () => t["./modules/apis/chat/dto/get-conversation-messages/GetConversationMessageResponse.dto"].ActionsOnMessageDTO } } }], [import("./modules/apis/auth/dto/init-oauth-password/InitOAuthPasswordBody.dto"), { "InitOAuthPasswordBodyDTO": { password: { required: true, type: () => String, minLength: 8, maxLength: 20 } } }], [import("./modules/apis/auth/dto/init-oauth-password/InitOAuthPasswordHeaders.dto"), { "InitOAuthPasswordHeadersDTO": { token: { required: true, type: () => String } } }], [import("./modules/apis/auth/dto/init-oauth-password/InitOAuthPasswordResponse.dto"), { "InitOAuthPasswordResponseDTO": { user: { required: true, type: () => t["./common/dto/UserResponse.dto"].UserResponseDTO } } }], [import("./common/dto/PaginationQuery.dto"), { "PaginationQueryDTO": { page: { required: true, type: () => Number, default: 1, minimum: 1 }, pageSize: { required: true, type: () => Number, default: 10, minimum: 1 } } }], [import("./modules/apis/chat/dto/create-private-chat/CreatedPrivateChatResponse.dto"), { "CreatedPrivateChatResponseDTO": { createdConversationId: { required: true, type: () => String } } }], [import("./modules/apis/chat/dto/get-chat-members/GetChatMemberResponse.dto"), { "GetChatMemberResponseDTO": { profile: { required: true, type: () => t["./common/dto/ConversationParticipantResponse.dto"].ConversationParticipantProfileDTO }, isOnline: { required: true, type: () => Boolean } } }], [import("./modules/apis/chat/dto/get-chat-members/GetChatMembersQuery.dto"), { "GetChatMembersQueryDTO": { searchKey: { required: true, type: () => String, default: "" } } }], [import("./common/dto/ConversationResponse.dto"), { "ConversationResponseDTO": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, thumbnail: { required: true, type: () => String }, isGroupChat: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date } } }], [import("./modules/apis/chat/dto/get-conversation-details/GetConversationDetailsResponse.dto"), { "ConversationDetailParticipant": { isOnline: { required: true, type: () => Boolean }, lastOnlineAt: { required: true, type: () => Date, nullable: true } }, "GetConversationDetailsResponseDTO": { participants: { required: true, type: () => [t["./modules/apis/chat/dto/get-conversation-details/GetConversationDetailsResponse.dto"].ConversationDetailParticipant] } } }], [import("./modules/apis/chat/dto/get-conversations/GetConversationResponse.dto"), { "GetConversationResponseDTO": { isOnline: { required: true, type: () => Boolean } } }], [import("./modules/apis/chat/dto/send-conversation-message/SendConversationMessageBody.dto"), { "SendConversationMessageDTO": { messageFiles: { required: false, type: () => [t["nestjs-form-data/dist/classes/storage/MemoryStoredFile"].MemoryStoredFile], maxItems: 5 }, content: { required: false, type: () => String, minLength: 1 }, parentMessageId: { required: false, type: () => String, format: "uuid" } } }], [import("./modules/apis/chat/dto/create-private-chat/CreatePrivateChatBody.dto"), { "CreatePrivateChatBodyDTO": { receiverId: { required: true, type: () => String, format: "uuid" } } }], [import("./modules/apis/chat/dto/drop-message-emotion/DropMessageEmotionBody.dto"), { "DropMessageEmotionBodyDTO": { emojiCode: { required: true, type: () => String } } }], [import("./modules/web-socket/chat/dto/mark-seen-message/MarkSeenMessageBody.dto"), { "MarkSeenMessageBodyDTO": { conversationId: { required: true, type: () => String, format: "uuid" } } }], [import("./modules/apis/notification/dto/subscribe/SubscribeNotificationBody.dto"), { "SubscribeNotificationBodyDTO": { deviceToken: { required: true, type: () => String }, platform: { required: true, enum: t["./common/constants/common.enum"].EDevicePlatform } } }], [import("./modules/apis/notification/dto/test-send-notification/TestSendNotificationBody.dto"), { "TestSendNotificationBodyDTO": { title: { required: true, type: () => String }, body: { required: true, type: () => String }, launchUrl: { required: false, type: () => String }, toUserId: { required: true, type: () => String, format: "uuid" }, platform: { required: true, type: () => Object } } }], [import("./common/dto/SendNotificationPayload.dto"), { "SendNotificationPayloadDTO": { title: { required: true, type: () => String }, body: { required: true, type: () => String }, launchUrl: { required: false, type: () => String } } }], [import("./modules/apis/user/dto/2fa/DisabledTwoFABody.dto"), { "DisabledTwoFABodyDTO": { password: { required: true, type: () => String } } }], [import("./modules/apis/user/dto/2fa/EnableTwoFABody.dto"), { "EnableTwoFABodyDTO": { otpCode: { required: true, type: () => String, minLength: 6, maxLength: 6 } } }], [import("./modules/apis/user/dto/2fa/GenerateTwoFAResponse.dto"), { "GenerateTwoFAResponseDTO": { user: { required: true, type: () => t["./common/dto/UserResponse.dto"].UserResponseDTO }, qrCodeUrl: { required: true, type: () => String }, secretKey: { required: true, type: () => String } } }], [import("./modules/apis/user/dto/2fa/ModifyTwoFAResponse.dto"), { "ModifyTwoFAResponseDTO": { user: { required: true, type: () => t["./common/dto/UserResponse.dto"].UserResponseDTO } } }], [import("./modules/apis/user/dto/change-password/ChangePasswordBody.dto"), { "ChangePasswordBodyDTO": { oldPassword: { required: true, type: () => String }, newPassword: { required: true, type: () => String, minLength: 8, maxLength: 20 } } }], [import("./modules/apis/user/dto/update-profile/UpdateProfileBody.dto"), { "UpdateProfileBodyDTO": { avatar: { required: false, type: () => t["nestjs-form-data/dist/classes/storage/MemoryStoredFile"].MemoryStoredFile }, fullName: { required: false, type: () => String, minLength: 1 } } }], [import("./modules/apis/user/dto/update-profile/UpdateProfileResponse.dto"), { "UpdateProfileResponseDTO": { updatedUser: { required: true, type: () => t["./common/dto/UserResponse.dto"].UserResponseDTO } } }], [import("./common/dto/SystemActionDetailResponse.dto"), { "SystemActionDetailResponseDTO": { id: { required: true, type: () => String }, actor: { required: true, type: () => t["./common/dto/ConversationParticipantResponse.dto"].ConversationParticipantProfileDTO }, target: { required: true, type: () => t["./common/dto/ConversationParticipantResponse.dto"].ConversationParticipantProfileDTO, nullable: true }, oldValue: { required: false, type: () => String }, newValue: { required: false, type: () => String } } }], [import("./modules/apis/chat/dto/send-conversation-message/SendConversationMessageResponse.dto"), { "SendConversationMessageResponseDTO": { sentMessage: { required: true, type: () => t["./common/dto/ConversationMessageResponse.dto"].ConversationMessageResponseDTO } } }]], "controllers": [[import("./modules/apis/auth/controllers/auth.controller"), { "AuthController": { "signup": { type: t["./modules/apis/auth/dto/signup/SignupResponse.dto"].SignupResponseDTO }, "login": { type: t["./modules/apis/auth/dto/login/LoginResponse.dto"].LoginResponseDTO }, "sendResetPasswordMail": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "resetPassword": { type: t["./modules/apis/auth/dto/reset-password/ResetPasswordResponse.dto"].ResetPasswordResponseDto }, "refreshToken": { type: t["./modules/apis/auth/dto/refresh-token/RefreshTokenResponse.dto"].RefreshTokenResponseDTO }, "verifyTwoFactorAuth": { type: t["./modules/apis/auth/dto/login/LoginResponse.dto"].LoginResponseDTO } } }], [import("./modules/apis/auth/controllers/oauth.controller"), { "OAuthController": { "googleAuth": {}, "googleAuthRedirect": {}, "initPassword": { type: t["./modules/apis/auth/dto/init-oauth-password/InitOAuthPasswordResponse.dto"].InitOAuthPasswordResponseDTO } } }], [import("./modules/apis/chat/chat.controller"), { "ChatController": { "getChatMembers": {}, "createPrivateChat": { type: t["./modules/apis/chat/dto/create-private-chat/CreatedPrivateChatResponse.dto"].CreatedPrivateChatResponseDTO }, "getUserConversations": {}, "getConversationDetails": { type: t["./modules/apis/chat/dto/get-conversation-details/GetConversationDetailsResponse.dto"].GetConversationDetailsResponseDTO }, "sendConversationMessage": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "getConversationMessages": {}, "dropMessageEmotion": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "removeMessageEmotion": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "revokeMessage": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "deleteMessage": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO } } }], [import("./modules/apis/notification/notification.controller"), { "NotificationController": { "subscribeNotification": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "unsubscribeNotification": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "sendNotification": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO } } }], [import("./modules/apis/user/user.controller"), { "UserController": { "profile": { type: t["./common/dto/UserResponse.dto"].UserResponseDTO }, "editProfile": { type: t["./modules/apis/user/dto/update-profile/UpdateProfileResponse.dto"].UpdateProfileResponseDTO }, "changePassword": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO }, "generateTwoFA": { type: t["./modules/apis/user/dto/2fa/GenerateTwoFAResponse.dto"].GenerateTwoFAResponseDTO }, "enableTwoFA": { type: t["./modules/apis/user/dto/2fa/ModifyTwoFAResponse.dto"].ModifyTwoFAResponseDTO }, "disableTwoFA": { type: t["./modules/apis/user/dto/2fa/ModifyTwoFAResponse.dto"].ModifyTwoFAResponseDTO }, "logout": { type: t["./common/dto/MessageResponse.dto"].MessageResponseDTO } } }]] } };
};